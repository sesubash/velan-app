{"version":3,"sources":["app/pages/UserForm.js","app/configs/endpoints.js","app/utils/session-storage.js"],"names":["UserForm","useState","validated","setValidated","search","Storage","useLocation","id","URLSearchParams","get","view","user","filter","u","user_id","console","debug","className","to","pathname","noValidate","onSubmit","event","form","currentTarget","data","FormData","checkValidity","preventDefault","stopPropagation","log","config","endpoints","basePath","login","serialize","Group","Control","type","defaultValue","first_name","required","placeholder","size","last_name","mobile_number","password","Check","label","defaultChecked","status","users","list","add","edit","visits","key","value","cookies","set","erase"],"mappings":"mNA+JeA,UAtJf,WACE,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAmBMC,GAlBQ,IAAIC,IAkBHC,cAAcF,QACvBG,EAAK,IAAIC,gBAAgBJ,GAAQK,IAAI,MACrCC,EAAOH,EAAK,OAAS,MAErBI,EAlBK,CACL,CACI,QAAW,IACX,WAAc,SACd,UAAa,IACb,cAAiB,aACjB,SAAY,QACZ,OAAU,IACV,WAAc,sBACd,WAAc,wBASAC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,SAAWP,KAAI,GAwCrD,OAvCAQ,QAAQC,MAAML,GAwCZ,6BACE,yBAAKM,UAAU,qBACb,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,SACA,kBAAC,IAAD,CAAMA,UAAU,kBAAkBC,GAAI,CAACC,SAAS,iBAAhD,SAGJ,yBAAKF,UAAU,oBACb,yBAAKA,UAAU,+CACf,wBAAIA,UAAU,gCACTP,EADL,SAGA,kBAAC,IAAD,CACIO,UAAU,OACVG,YAAU,EACVlB,UAAWA,EACXmB,SApDd,SAAsBC,GACpB,IAAMC,EAAOD,EAAME,cACbC,EAAO,IAAIC,SAASH,IAGG,IAAzBA,EAAKI,iBACPL,EAAMM,iBACNN,EAAMO,mBAGNd,QAAQe,IACN,sBACAP,EAAKI,gBAfH,GAAN,OAAUI,IAAOC,UAAUC,UAA3B,OAAsCF,IAAOC,UAAUE,OAiBnDC,YACAZ,EACAE,GAIJtB,GAAa,GACbmB,EAAMM,mBAiCM,kBAAC,IAAKQ,MAAN,CAAYnB,UAAU,uBACpB,kBAAC,IAAKoB,QAAN,CACEC,KAAK,OACLC,aAAY,OAAI5B,QAAJ,IAAIA,OAAJ,EAAIA,EAAM6B,WACtBC,UAAQ,EACRC,YAAY,aACZC,KAAK,KACL1B,UAAU,YAGd,kBAAC,IAAKmB,MAAN,CAAYnB,UAAU,uBACpB,kBAAC,IAAKoB,QAAN,CACEC,KAAK,OACLC,aAAY,OAAI5B,QAAJ,IAAIA,OAAJ,EAAIA,EAAMiC,UACtBH,UAAQ,EACRC,YAAY,YACZC,KAAK,KACL1B,UAAU,YAGd,kBAAC,IAAKmB,MAAN,CAAYnB,UAAU,uBACpB,kBAAC,IAAKoB,QAAN,CACEC,KAAK,SACLC,aAAY,OAAI5B,QAAJ,IAAIA,OAAJ,EAAIA,EAAMkC,cACtBJ,UAAQ,EACRC,YAAY,SACZC,KAAK,KACL1B,UAAU,YAGd,kBAAC,IAAKmB,MAAN,CAAYnB,UAAU,uBACpB,kBAAC,IAAKoB,QAAN,CACEC,KAAK,WACLC,aAAY,OAAI5B,QAAJ,IAAIA,OAAJ,EAAIA,EAAMmC,SACtBL,UAAQ,EACRC,YAAY,WACZC,KAAK,KACL1B,UAAU,YAGd,kBAAC,IAAKmB,MAAN,CAAYnB,UAAU,uBACpB,kBAAC,IAAK8B,MAAN,CACET,KAAM,WACNU,MAAK,SACLC,gBAAsB,OAAJtC,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,QAAS,OAAS,MAG9C,yBAAKjC,UAAU,QACb,kBAAC,IAAD,CACEA,UAAU,oEACVqB,KAAK,UAFP,kB,gCC9IlB,kCAAO,IAAMP,EAAS,CACpBC,UAAW,CACTC,SAAU,4CACVC,MAAO,qBACPiB,MAAO,CACLC,KAAM,WACNC,IAAK,UACLC,KAAM,YAERC,OAAQ,CACNH,KAAM,gB,wGCPN/C,G,0FACJ,SAAImD,EAAKC,GACLC,IAAQC,IAAIH,EAAKC,K,iBAGrB,SAAID,GACA,OAAOE,IAAQjD,IAAI+C,K,oBAGvB,SAAOA,GACHE,IAAQE,MAAMJ,O","file":"static/js/8.d3625b9d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { config } from \"../configs/endpoints.js\";\nimport { Storage } from \"../utils/session-storage.js\";\nimport { serialize } from \"form-serialize\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\n\n\nfunction UserForm() {\n  const [validated, setValidated] = useState(false);\n  let storage = new Storage();\n\n  const data = {\n    \"error\": \"0\",\n    \"users\": [\n        {\n            \"user_id\": \"1\",\n            \"first_name\": \"Kannan\",\n            \"last_name\": \"K\",\n            \"mobile_number\": \"9600885976\",\n            \"password\": \"admin\",\n            \"status\": \"1\",\n            \"created_on\": \"2022-03-03 09:39:01\",\n            \"updated_on\": \"2022-03-03 09:39:01\"\n        }\n    ]\n};\n\n  const search = useLocation().search;\n  const id = new URLSearchParams(search).get('id');\n  const view = id ? \"Edit\" : \"Add\";\n\n  const user = data.users.filter(u => u.user_id == id)[0];\n  console.debug(user);\n\n  function getEndpoint() {\n    return `${config.endpoints.basePath}${config.endpoints.login}`;\n  }\n\n  function handleSubmit(event) {\n    const form = event.currentTarget;\n    const data = new FormData(form);\n    \n    \n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      // let formData = serialize(form, { hash: true });\n      console.log(\n        \"You clicked submit.\",\n        form.checkValidity(),\n        getEndpoint(),\n        serialize,\n        form,\n        data\n      );\n    }\n\n    setValidated(true);\n    event.preventDefault();\n  }\n\n  // handleSubmit2 (event) {\n  //   event.preventDefault();\n  //   console.debug(\"data:\", this)\n  //   // let formData = this.props.auth.getIn([\"emailSignIn\", this.getEndpoint(), \"form\"]).toJS();\n  //   // this.props.dispatch(emailSignIn(formData, this.getEndpoint()))\n  //   //   .then(this.props.next)\n  //   //   .catch(() => {});\n  // }\n\n  return (\n    <div>\n      <div className=\"d-flex  auth px-0\">\n        <div className=\"row w-100 mx-0\">\n        <div className=\"col-lg-12 mx-auto\">\n          <div className=\"page-header\">\n              <h3 className=\"page-title\"> User</h3>\n              <Link className=\"btn btn-primary\" to={{pathname: `/pages/users`}}>Back</Link>\n          </div>\n          \n          <div className=\"col-lg-4 mx-auto\">\n            <div className=\"auth-form-light text-left py-5 px-4 px-sm-5\">\n            <h6 className=\"text-center font-weight-bold\">\n                {view} User\n            </h6>\n            <Form\n                className=\"pt-3\"\n                noValidate\n                validated={validated}\n                onSubmit={handleSubmit}\n              >\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"text\"\n                    defaultValue = {user?.first_name}\n                    required\n                    placeholder=\"First Name\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"text\"\n                    defaultValue = {user?.last_name}\n                    required\n                    placeholder=\"Last Name\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"number\"\n                    defaultValue = {user?.mobile_number}\n                    required\n                    placeholder=\"Mobile\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"password\"\n                    defaultValue = {user?.password}\n                    required\n                    placeholder=\"Password\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Check\n                    type={'checkbox'}\n                    label={`Status`}\n                    defaultChecked = {user?.status ? 'true' : ''}\n                  />\n                </Form.Group>\n                <div className=\"mt-3\">\n                  <Button\n                    className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                    type=\"submit\"\n                  >\n                    Save\n                  </Button>\n                </div>\n              </Form>\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserForm;\n","export const config = {\n  endpoints: {\n    basePath: \"http://stronglasstough.com/velan/api.php?\",\n    login: \"validateAdminLogin\",\n    users: {\n      list: \"getUsers\",\n      add: \"addUser\",\n      edit: \"editUser\",\n    },\n    visits: {\n      list: \"getVisits\",\n    },\n  },\n};","import cookies from \"browser-cookies\";\nimport { values } from \"lodash\";\n\nclass Storage {\n  set(key, value) {\n      cookies.set(key, value)\n  }\n\n  get(key) {\n      return cookies.get(key)\n  }\n\n  remove(key) {\n      cookies.erase(key)\n  }\n}\n\nexport { Storage };\n"],"sourceRoot":""}