{"version":3,"sources":["app/configs/endpoints.js","app/pages/Visits.js"],"names":["config","endpoints","basePath","login","users","list","add","edit","visits","filter","target","get","dashboard","Visits","useState","fromDate","setFromDate","toDate","setToDate","setCurrentUser","validated","setValidated","SearchBar","Search","userData","setUser","data","setData","CustomExport","props","className","onClick","console","debug","onExport","columns","dataField","text","formatter","cell","row","rowIndex","csvExport","hidden","first_name","last_name","Date","created_on","toLocaleString","dateFilter","to","pathname","process","search","id","getEndpoint","type","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","serialize","hash","from_date","toISOString","slice","to_date","log","axios","url","method","headers","then","res","error","alert","message","catch","err","useEffect","a","userInfo","visitInfo","min","reduce","b","startDate","split","endDate","fetchData","aria-label","href","aria-current","keyField","defaultSearch","searchFormatted","exportCSV","noValidate","onSubmit","Group","Label","Control","as","name","required","defaultValue","onChange","e","value","key","map","u","i","user_id","selected","dateFormat","date","popperPlacement","showYearDropdown","yearDropdownItemNumber","scrollableYearDropdown","autoComplete","customInput","placeholder","searchProps","csvProps","baseProps","pagination","paginationFactory","filterFactory"],"mappings":"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","file":"static/js/15.53f25ee0.chunk.js","sourcesContent":["export const config = {\n  endpoints: {\n    basePath: \"http://www.velanapp.in/velan/api.php?\",\n    login: \"validateAdminLogin\",\n    users: {\n      list: `getUsers`,\n      add: \"addUser\",\n      edit: \"editUser\",\n    },\n    visits: {\n      list: \"getVisits\",\n      filter: \"getVisitsByFilter\"\n    },\n    target: {\n      get: \"getDailyTarget\",\n      edit: \"editDailyTarget\",\n    },\n    dashboard: {\n      list: \"getDashboradData\",\n    },\n  },\n};","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { config } from \"../configs/endpoints.js\";\nimport serialize from \"form-serialize\";\nimport axios from \"axios\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory, { dateFilter } from \"react-bootstrap-table2-filter\";\nimport DatePicker from \"react-datepicker\";\n\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\n\nfunction Visits() {\n  const [fromDate, setFromDate] = useState(null);\n  const [toDate, setToDate] = useState(null);\n  const [currentUser, setCurrentUser] = useState(0);\n  const [validated, setValidated] = useState(false);\n  const { SearchBar } = Search;\n\n  const [userData, setUser] = useState(null);\n  const [data, setData] = useState(null);\n\n  const CustomExport = (props) => {\n    const handleClick = () => {\n      console.debug(\"visits:\", data.visits);\n      props.onExport(data.visits);\n    };\n    return (\n      <div>\n        <button className=\"btn btn-success\" onClick={handleClick}>\n          Export Visit Data\n        </button>\n      </div>\n    );\n  };\n\n  // Column display formatters\n  function actionDisplay(cell, row, rowIndex) {\n    return (\n      <Link\n        className=\"btn btn-primary\"\n        to={{\n          pathname: `${process.env.PUBLIC_URL}/pages/visit`,\n          search: `?id=${row.id}`,\n        }}\n      >\n        Detail\n      </Link>\n    );\n  }\n\n  function indexDisplay(cell, row, rowIndex) {\n    return rowIndex + 1;\n  }\n\n  function nameDisplay(cell, row) {\n    return row.first_name + row.last_name;\n  }\n\n  function dateDisplay(cell, row) {\n    let day = new Date(row.created_on);\n    return day.toLocaleString();\n  }\n\n  // Table coliumn configs\n\n  const columns = [\n    {\n      dataField: \"{rowIndex}\",\n      text: \"#\",\n      formatter: indexDisplay,\n      csvExport: false,\n    },\n    {\n      dataField: \"customer_name\",\n      text: \"Customer Name\",\n    },\n    {\n      dataField: \"customer_address\",\n      text: \"Address\",\n      hidden: true,\n    },\n    {\n      dataField: \"customer_mobile_number\",\n      text: \"Customer Mobile\",\n    },\n    {\n      dataField: \"person_type\",\n      text: \"Buyer Type\",\n      hidden: true,\n    },\n    {\n      dataField: \"buying_person_name\",\n      text: \"Buyer Name\",\n    },\n    {\n      dataField: \"buying_person_mobile_number\",\n      text: \"Buyer Mobile\",\n    },\n    {\n      dataField: \"first_name\",\n      text: \"Salesman Name\",\n      formatter: nameDisplay,\n    },\n    {\n      dataField: \"mobile_number\",\n      text: \"Salesman Mobile\",\n    },\n    {\n      dataField: \"created_on\",\n      text: \"Visited On\",\n      formatter: dateDisplay,\n      filter: dateFilter(),\n    },\n    {\n      dataField: \"user_id\",\n      text: \"Detail\",\n      formatter: actionDisplay,\n      csvExport: false,\n    },\n    {\n      dataField: \"building_area\",\n      text: \"Building Area\",\n      hidden: true,\n    },\n    {\n      dataField: \"branch\",\n      text: \"Branch\",\n      hidden: true,\n    },\n    {\n      dataField: \"requirement\",\n      text: \"Requirement\",\n      hidden: true,\n    },\n    {\n      dataField: \"building_type\",\n      text: \"Building Type\",\n      hidden: true,\n    },\n    {\n      dataField: \"is_known\",\n      text: \"Known Customer\",\n      hidden: true,\n    },\n    {\n      dataField: \"customer_response\",\n      text: \"Customer Response\",\n      hidden: true,\n    },\n    {\n      dataField: \"customer_maycome\",\n      text: \"Customer Willingness\",\n      hidden: true,\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const userInfo = await axios.get(getEndpoint(\"users\"));\n      setUser(userInfo.data);\n      const visitInfo = await axios.get(getEndpoint(\"visits\"));\n      setData(visitInfo.data);\n\n      // Get minimum date from the visits list \n      const min = visitInfo.data.visits.reduce((a, b) => {\n        return new Date(a) <\n          new Date(b.created_on)\n          ? a\n          : b.created_on;\n      });\n      \n      const startDate = new Date(new Date(min).toLocaleString().split(\",\")[0]);\n      const endDate = new Date();\n      console.debug(\"Start Date:\", startDate, \"End Date:\", endDate)\n      setFromDate(startDate);\n      setToDate(endDate);\n      \n    };\n    fetchData();\n  }, []);\n\n  function getEndpoint(type) {\n    if (type === \"users\") {\n      return `${config.endpoints.basePath}${config.endpoints.users.list}`;\n    } else if (type === \"filter\") {\n      return `${config.endpoints.basePath}${config.endpoints.visits.filter}`;\n    }\n    return `${config.endpoints.basePath}${config.endpoints.visits.list}`;\n  }\n\n  function handleSubmit(event) {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      const data = serialize(form, { hash: true });\n      data.from_date = `${new Date(fromDate)\n        .toISOString()\n        .slice(0, 10)} 00:00:00`;\n      data.to_date = `${new Date(toDate).toISOString().slice(0, 10)} 23:59:59`;\n      console.log(\"Filter data:\", data);\n      axios({\n        // Endpoint to send files\n        url: getEndpoint(\"filter\"),\n        method: \"POST\",\n        headers: {\n          // Add any auth token here\n          // authorization: \"your token comes here\",\n        },\n\n        // Attaching the form data\n        data: data,\n      })\n        // Handle the response from backend here\n        .then((res) => {\n          if (res.data.error == \"0\") {\n            setData(res.data);\n          } else if (res.data.error == \"1\") {\n            alert(res.data.message);\n          }\n        })\n\n        // Catch errors if any\n        .catch((err) => {});\n\n      event.preventDefault();\n    }\n\n    setValidated(true);\n  }\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\"> Visits </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                App\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Visits\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-12 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"table-responsive\">\n                {data && (\n                  <ToolkitProvider\n                    keyField=\"id\"\n                    data={data?.visits}\n                    columns={columns}\n                    search={{ defaultSearch: \"\", searchFormatted: true }}\n                    exportCSV\n                  >\n                    {(props) => (\n                      <div>\n                        <Form\n                          noValidate\n                          validated={validated}\n                          onSubmit={handleSubmit}\n                        >\n                          <div className=\"row align-items-center\">\n                            <div className=\"col-lg-3\">\n                              <Form.Group>\n                                <Form.Label>Select User</Form.Label>\n                                <div className=\"text-right\">\n                                  <Form.Control\n                                    as=\"select\"\n                                    name=\"user_id\"\n                                    required\n                                    defaultValue=\"none\"\n                                    onChange={(e) =>\n                                      setCurrentUser(e.target.value)\n                                    }\n                                  >\n                                    <option key=\"0\" value=\"0\">\n                                      All\n                                    </option>\n                                    {userData?.users.map((u, i) => (\n                                      <option key={u.user_id} value={u.user_id}>\n                                        {u.first_name + u.last_name}\n                                      </option>\n                                    ))}\n                                  </Form.Control>\n                                </div>\n                              </Form.Group>\n                            </div>\n                            <div className=\"col-lg-2\">\n                              <Form.Group>\n                                <Form.Label>From</Form.Label>\n                                <DatePicker\n                                  selected={fromDate}\n                                  dateFormat=\"dd/MM/yyyy\"\n                                  onChange={(date) => setFromDate(date)}\n                                  className=\"form-control\"\n                                  popperPlacement=\"bottom-end\"\n                                  showYearDropdown\n                                  yearDropdownItemNumber={15}\n                                  scrollableYearDropdown\n                                  name=\"from_date\"\n                                  required\n                                  autoComplete=\"off\"\n                                  customInput={\n                                    <input\n                                      type=\"text\"\n                                      id=\"fromDate\"\n                                      placeholder=\"From\"\n                                    />\n                                  }\n                                />\n                              </Form.Group>\n                            </div>\n                            <div className=\"col-lg-2\">\n                              <Form.Group>\n                                <Form.Label>To</Form.Label>\n                                <DatePicker\n                                  selected={toDate}\n                                  dateFormat=\"dd/MM/yyyy\"\n                                  onChange={(date) => setToDate(date)}\n                                  className=\"form-control\"\n                                  popperPlacement=\"bottom-end\"\n                                  name=\"to_date\"\n                                  required\n                                  autoComplete=\"off\"\n                                  showYearDropdown\n                                  yearDropdownItemNumber={15}\n                                  scrollableYearDropdown\n                                  customInput={\n                                    <input\n                                      type=\"text\"\n                                      id=\"toDate\"\n                                      placeholder=\"To\"\n                                    />\n                                  }\n                                />\n                              </Form.Group>\n                            </div>\n                            <div className=\"col-lg-2 text-left align-middle\">\n                              <Button\n                                className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                                type=\"submit\"\n                              >\n                                Filter\n                              </Button>\n                            </div>\n                          </div>\n                        </Form>\n                        <hr />\n                        <div className=\"row align-items-center\">\n                          <div className=\"col-lg-1\">\n                            <h4 className=\"d-inline-flex align-middle\">\n                              Search:\n                            </h4>\n                          </div>\n                          <div className=\"col-lg-6 text-left\">\n                            <SearchBar\n                              className=\"border border-secondary w-100\"\n                              {...props.searchProps}\n                            />\n                          </div>\n                          <div className=\"col-lg-5 text-right\">\n                            <CustomExport {...props.csvProps}></CustomExport>\n                          </div>\n                        </div>\n                        <hr />\n                        <BootstrapTable\n                          {...props.baseProps}\n                          pagination={paginationFactory()}\n                          filter={filterFactory()}\n                        />\n                      </div>\n                    )}\n                  </ToolkitProvider>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Visits;\n"],"sourceRoot":""}